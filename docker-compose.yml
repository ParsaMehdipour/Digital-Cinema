version: '3.4'

services:
  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    container_name: webapi
    depends_on: 
     - postgresDb
     - mongoDb 
    build:
      context: .
      dockerfile: ./5.WebApi/WebApi/Dockerfile
    environment:
        DomainEventsConnectionString.ConnectionString: mongodb://mongoDb:8082
        DomainEventsConnectionString.DatabaseName: DigitalCinemaMongo
        ApplicationConnectionString: Server=postgresDb;Database=DigitalCinema_Db;Port=5432;User Id=postgres;Password=Digital_CinemaDb2978
    networks: 
     - DigitalCinema

  # elasticSearch:
  #   container_name: elasticSearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
  #   ports:
  #     - 9200:9200
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   environment:
  #     - xpack.monitoring.enabled=true
  #     - xpack.watcher.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - discovery.type=single-node
  #   networks:
  #     - elastic
  #   mem_limit: 2g

  # kibana:
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:7.16.1
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticSearch
  #   environment:
  #     - ELASTICSEARCH_URL=http://localhost:9200
  #   networks:
  #     - elastic
  #   mem_limit: 2g

  postgresDb:
    image: postgres
    container_name: postgresDb
    restart: always
    environment:
      POSTGRES_PASSWORD: Digital_CinemaDb2978
    ports:
      - 5432:5432
    networks: 
     - DigitalCinema

  mongoDb:
    image: mongo
    container_name: mongoDb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: DcMongoDb
      MONGO_INITDB_ROOT_PASSWORD: DcMongoDbPass
    ports:
      - 0.0.0.0:8082:27017
    networks: 
     - DigitalCinema
  

networks:
  DigitalCinema: 
   name: DigitalCinema
#   elastic:
#     driver: bridge

# volumes:
#   elasticsearch-data: